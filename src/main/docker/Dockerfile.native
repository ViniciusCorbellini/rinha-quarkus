# ---- Etapa 1: Build ----
# Imagem de build baseada em UBI 9 (com glibc 2.34+) e JDK 21
FROM quay.io/quarkus/ubi-quarkus-mandrel-builder-image:jdk-21 AS build

WORKDIR /project

# Copie primeiro os arquivos de build
COPY mvnw .
COPY .mvn .mvn
COPY pom.xml .

# Baixe as dependências
RUN ./mvnw -B dependency:go-offline

# Copie o código-fonte
COPY src src

# Volte para o usuário padrão (1001) para executar o build
USER 1001

# Executa o build nativo DENTRO do container
# ADICIONAMOS A FLAG PARA DESLIGAR O BUILD ESTÁTICO
RUN ./mvnw package -Pnative -Dquarkus.native.container-build=false -Dquarkus.native.additional-build-args=-H:-StaticExecutableWithDynamicLibC

# ---- Etapa 2: Runtime ----
# Imagem micro baseada em UBI 9 (compatível com a de build)
FROM quay.io/quarkus/quarkus-micro-image:3.0

WORKDIR /work/

# Copie o executável gerado na Etapa 1
COPY --from=build /project/target/*-runner /work/application

EXPOSE 8080
USER 1001
CMD ["./application", "-Dquarkus.http.host=0.0.0.0"]